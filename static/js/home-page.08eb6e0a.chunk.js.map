{"version":3,"sources":["api/fetchFilms.js","components/MoviesList/MoviesListStyled.js","components/MoviesList/MoviesListItem/MoviesListItem.js","components/MoviesList/MoviesList.js","pages/HomePage.js"],"names":["axios","defaults","baseURL","params","api_key","fetchTrendings","a","get","data","results","searchMovies","query","fetchMoviesDetails","id","fetchCast","fetchReviews","MoviesListWrapper","styled","div","MoviesListItem","movieName","className","withRouter","movies","location","map","title","to","pathname","routes","state","from","movieId","HomePage","this","setState","length","Component"],"mappings":"iWAEAA,IAAMC,SAASC,QAAU,+BACzBF,IAAMC,SAASE,OAAS,CAAEC,QAAS,oCAE5B,IAAMC,EAAc,uCAAG,8BAAAC,EAAA,sEACLN,IAAMO,IAAI,wBADL,uBACpBC,EADoB,EACpBA,KADoB,kBAErBA,EAAKC,SAFgB,2CAAH,qDAKdC,EAAY,uCAAG,WAAOC,GAAP,iBAAAL,EAAA,sEACHN,IAAMO,IAAN,6CACiBI,EADjB,YADG,uBAClBH,EADkB,EAClBA,KADkB,kBAInBA,EAAKC,SAJc,2CAAH,sDAOZG,EAAkB,uCAAG,WAAOC,GAAP,iBAAAP,EAAA,sEACTN,IAAMO,IAAN,iBAAoBM,EAApB,oBADS,uBACxBL,EADwB,EACxBA,KADwB,kBAEzBA,GAFyB,2CAAH,sDAKlBM,EAAS,uCAAG,WAAOD,GAAP,iBAAAP,EAAA,sEACAN,IAAMO,IAAN,iBAAoBM,EAApB,4BADA,uBACfL,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,sDAKTO,EAAY,uCAAG,WAAOF,GAAP,iBAAAP,EAAA,sEACHN,IAAMO,IAAN,iBAAoBM,EAApB,oBADG,uBAClBL,EADkB,EAClBA,KADkB,kBAEnBA,EAAKC,SAFc,2CAAH,uD,iECbVO,E,MAZWC,EAAOC,IAAV,6L,OCQRC,EAPQ,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACxB,OAAO,oBAAIC,UAAU,mBAAd,SAAkCD,K,OCqC5BE,iBA/BI,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SAC5B,OACE,cAAC,EAAD,UACE,oBAAIH,UAAU,cAAd,SACGE,EAAOE,KAAI,YAAoB,IAAjBZ,EAAgB,EAAhBA,GAAIa,EAAY,EAAZA,MACjB,OACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAKC,IAAON,OAAZ,YAAsBV,GAC9BiB,MAAO,CAAEC,KAAMP,IAHnB,SAOE,cAAC,EAAD,CAAgBJ,UAAWM,EAAOM,QAASnB,KAFtCA,c,kIChBboB,E,4MACJH,MAAQ,CACNP,OAAQ,I,8FAGV,4BAAAjB,EAAA,sEACuBD,cADvB,OACQkB,EADR,OAEEW,KAAKC,SAAS,CAAEZ,OAAQA,IAF1B,gD,0EAKA,WACE,IAAQA,EAAWW,KAAKJ,MAAhBP,OAER,OACE,sBAAKF,UAAU,YAAf,UACE,iDACCE,EAAOa,OAAS,GAAK,cAAC,IAAD,CAAYb,OAAQA,W,GAhB3Bc,aAsBRJ","file":"static/js/home-page.08eb6e0a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\r\naxios.defaults.params = { api_key: \"aef9cffb51e8fe7e1c3e621e64df0279\" };\r\n\r\nexport const fetchTrendings = async () => {\r\n  const { data } = await axios.get(\"/trending/movie/day?\");\r\n  return data.results;\r\n};\r\n\r\nexport const searchMovies = async (query) => {\r\n  const { data } = await axios.get(\r\n    `/search/movie?language=en-US&query=${query}&page=1`\r\n  );\r\n  return data.results;\r\n};\r\n\r\nexport const fetchMoviesDetails = async (id) => {\r\n  const { data } = await axios.get(`/movie/${id}?language=en-US`);\r\n  return data;\r\n};\r\n\r\nexport const fetchCast = async (id) => {\r\n  const { data } = await axios.get(`/movie/${id}/credits?language=en-US`);\r\n  return data;\r\n};\r\n\r\nexport const fetchReviews = async (id) => {\r\n  const { data } = await axios.get(`/movie/${id}/reviews?page=1`);\r\n  return data.results;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst MoviesListWrapper = styled.div`\r\n  .movies-list-item {\r\n    font-size: 15px;\r\n    margin-bottom: 5px;\r\n    color: black;\r\n  }\r\n\r\n  .movies-list-item:hover {\r\n    color: rgb(231, 104, 73);\r\n  }\r\n`;\r\n\r\nexport default MoviesListWrapper;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MoviesListItem = ({ movieName }) => {\r\n  return <li className=\"movies-list-item\">{movieName}</li>;\r\n};\r\n\r\nMoviesListItem.propTypes = {\r\n  movieName: PropTypes.string.isRequired,\r\n};\r\nexport default MoviesListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport MoviesListWrapper from \"./MoviesListStyled\";\r\n\r\nimport MoviesListItem from \"./MoviesListItem/MoviesListItem\";\r\n\r\nimport routes from \"../../routes\";\r\n\r\nconst MoviesList = ({ movies, location }) => {\r\n  return (\r\n    <MoviesListWrapper>\r\n      <ul className=\"movies-list\">\r\n        {movies.map(({ id, title }) => {\r\n          return (\r\n            <Link\r\n              to={{\r\n                pathname: `${routes.movies}/${id}`,\r\n                state: { from: location },\r\n              }}\r\n              key={id}\r\n            >\r\n              <MoviesListItem movieName={title} movieId={id} />\r\n            </Link>\r\n          );\r\n        })}\r\n      </ul>\r\n    </MoviesListWrapper>\r\n  );\r\n};\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default withRouter(MoviesList);\r\n","import React, { Component } from \"react\";\r\n\r\nimport { fetchTrendings } from \"../api/fetchFilms\";\r\nimport MoviesList from \"../components/MoviesList/MoviesList\";\r\n\r\nclass HomePage extends Component {\r\n  state = {\r\n    movies: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const movies = await fetchTrendings();\r\n    this.setState({ movies: movies });\r\n  }\r\n\r\n  render() {\r\n    const { movies } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Trending today:</h1>\r\n        {movies.length > 0 && <MoviesList movies={movies} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n"],"sourceRoot":""}