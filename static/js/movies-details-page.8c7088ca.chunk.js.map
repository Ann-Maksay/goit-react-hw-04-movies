{"version":3,"sources":["api/fetchFilms.js","components/MovieCard/MovieCardStyled.js","data/img.js","components/MovieCard/MovieCard.js","components/MovieNavigation/MovieNavigatinStyled.js","components/MovieNavigation/MovieNavigation.js","components/Cast/CastStyled.js","components/Cast/CastListItem/CastListItem.js","components/Cast/Cast.js","components/Reviews/ReviewsStyled.js","components/Reviews/ReviewsListItem/ReviewsListItem.js","components/Reviews/Reviews.js","pages/MovieDetailsPage.js"],"names":["axios","defaults","baseURL","params","api_key","fetchTrendings","a","get","data","results","searchMovies","query","fetchMoviesDetails","id","fetchCast","fetchReviews","MovieCardWrapper","styled","div","DEFAULT_IMG","MovieCard","poster_path","title","release_date","vote_average","overview","genres","stats","Math","round","className","src","alt","slice","length","map","genre","name","defaultProps","MovieNavigationWrapper","withRouter","match","to","url","activeClassName","CastWrapper","CastListItem","profile_path","character","Cast","state","cast","this","props","movieId","setState","cast_id","Component","ReviewsWrapper","ReviewsListItem","author","content","Reviews","reviews","MovieDetailsPage","movie","prevLocationState","goBack","history","from","push","routes","movies","location","type","onClick","Object","keys","path","component"],"mappings":"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","file":"static/js/movies-details-page.8c7088ca.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\r\naxios.defaults.params = { api_key: \"aef9cffb51e8fe7e1c3e621e64df0279\" };\r\n\r\nexport const fetchTrendings = async () => {\r\n  const { data } = await axios.get(\"/trending/movie/day?\");\r\n  return data.results;\r\n};\r\n\r\nexport const searchMovies = async (query) => {\r\n  const { data } = await axios.get(\r\n    `/search/movie?language=en-US&query=${query}&page=1`\r\n  );\r\n  return data.results;\r\n};\r\n\r\nexport const fetchMoviesDetails = async (id) => {\r\n  const { data } = await axios.get(`/movie/${id}?language=en-US`);\r\n  return data;\r\n};\r\n\r\nexport const fetchCast = async (id) => {\r\n  const { data } = await axios.get(`/movie/${id}/credits?language=en-US`);\r\n  return data;\r\n};\r\n\r\nexport const fetchReviews = async (id) => {\r\n  const { data } = await axios.get(`/movie/${id}/reviews?page=1`);\r\n  return data.results;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst MovieCardWrapper = styled.div`\r\n  h2 {\r\n    margin: 3px;\r\n  }\r\n  h3 {\r\n    margin: 3px;\r\n  }\r\n  p {\r\n    margin: 0;\r\n  }\r\n  .overview-container {\r\n    width: 500px;\r\n  }\r\n`;\r\n\r\nexport default MovieCardWrapper;\r\n","export const DEFAULT_IMG = \"https://i.ibb.co/jRvB64r/404-2.jpgm\";\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport MovieCardWrapper from \"./MovieCardStyled\";\r\n\r\nimport { DEFAULT_IMG } from \"../../data/img\";\r\n\r\nconst MovieCard = ({\r\n  poster_path,\r\n  title,\r\n  release_date,\r\n  vote_average,\r\n  overview,\r\n  genres,\r\n}) => {\r\n  const stats = Math.round((vote_average / 10) * 100);\r\n  return (\r\n    <MovieCardWrapper>\r\n      <div className=\"imgContainer\">\r\n        <img\r\n          className=\"filmImg\"\r\n          src={\r\n            poster_path\r\n              ? `https://image.tmdb.org/t/p/w300${poster_path}`\r\n              : DEFAULT_IMG\r\n          }\r\n          alt={title}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"filmCard\">\r\n        <h2>{`${title} (${release_date.slice(0, 4)})`}</h2>\r\n        <p>{`User Score: ${stats}%`}</p>\r\n\r\n        <div className=\"overview-container\">\r\n          <h3>Overview</h3>\r\n          <p>{overview}</p>\r\n        </div>\r\n\r\n        <h3>Ganres</h3>\r\n        {genres.length > 0 ? (\r\n          <ul>\r\n            {genres.map((genre) => {\r\n              return <li key={genre.id}>{genre.name}</li>;\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          <p>None</p>\r\n        )}\r\n      </div>\r\n    </MovieCardWrapper>\r\n  );\r\n};\r\n\r\nMovieCard.defaultProps = {\r\n  poster_path: false,\r\n};\r\n\r\nMovieCard.propTypes = {\r\n  poster_path: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  release_date: PropTypes.string.isRequired,\r\n  vote_average: PropTypes.number.isRequired,\r\n  overview: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default MovieCard;\r\n","import styled from \"styled-components\";\r\n\r\nconst MovieNavigationWrapper = styled.div`\r\n  margin-bottom: 20px;\r\n  border: 1px solid black;\r\n  padding-left 10px;\r\n  width 600px;\r\n  \r\n   .sub-nav_link {\r\n    color: black;\r\n  }\r\n\r\n  .sub-nav_link--active {\r\n    color: rgb(231, 104, 73);\r\n  }\r\n`;\r\n\r\nexport default MovieNavigationWrapper;\r\n","import React from \"react\";\r\nimport { NavLink, withRouter } from \"react-router-dom\";\r\n\r\nimport MovieNavigationWrapper from \"./MovieNavigatinStyled\";\r\n\r\nconst MovieNavigation = ({ match }) => {\r\n  return (\r\n    <MovieNavigationWrapper>\r\n      <h2 className=\"subtitle\">Adittional information</h2>\r\n      <ul className=\"sub-nav-list\">\r\n        <li className=\"sub-nav-list-item\">\r\n          <NavLink\r\n            to={`${match.url}/cast`}\r\n            className=\"sub-nav_link\"\r\n            activeClassName=\"sub-nav_link--active\"\r\n          >\r\n            Cast\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"sub-nav-list-item\">\r\n          <NavLink\r\n            to={`${match.url}/reviews`}\r\n            className=\"sub-nav_link\"\r\n            activeClassName=\"sub-nav_link--active\"\r\n          >\r\n            Reviews\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </MovieNavigationWrapper>\r\n  );\r\n};\r\n\r\nexport default withRouter(MovieNavigation);\r\n","import styled from \"styled-components\";\r\n\r\nconst CastWrapper = styled.div`\r\n  .cast-list {\r\n    list-style: none;\r\n    margin: 0;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n  }\r\n  .castImg {\r\n    max-height: 450px;\r\n  }\r\n`;\r\n\r\nexport default CastWrapper;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { DEFAULT_IMG } from \"../../../data/img\";\r\n\r\nconst CastListItem = ({ profile_path, name, character }) => {\r\n  return (\r\n    <li className=\"cast-list-item\">\r\n      <div>\r\n        <img\r\n          className=\"castImg\"\r\n          src={\r\n            profile_path\r\n              ? `https://image.tmdb.org/t/p/w300${profile_path}`\r\n              : DEFAULT_IMG\r\n          }\r\n          alt={name}\r\n        />\r\n      </div>\r\n      <p>Name: {name}</p>\r\n      <p>Character: {character}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nCastListItem.defaultProps = {\r\n  profile_path: false,\r\n};\r\n\r\nCastListItem.propTypes = {\r\n  profile_path: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  character: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CastListItem;\r\n","import React, { Component } from \"react\";\r\nimport { fetchCast } from \"../../api/fetchFilms\";\r\n\r\nimport CastWrapper from \"./CastStyled\";\r\nimport CastListItem from \"./CastListItem/CastListItem\";\r\n\r\nclass Cast extends Component {\r\n  state = {\r\n    cast: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const id = this.props.match.params.movieId;\r\n    const { cast } = await fetchCast(id);\r\n    this.setState({ cast: cast });\r\n  }\r\n\r\n  render() {\r\n    const { cast } = this.state;\r\n    return (\r\n      <CastWrapper>\r\n        {cast.length > 0 ? (\r\n          <>\r\n            <h3>Cast:</h3>\r\n            <ul className=\"cast-list\">\r\n              {cast.map(({ cast_id, name, character, profile_path }) => {\r\n                return (\r\n                  <CastListItem\r\n                    key={cast_id}\r\n                    name={name}\r\n                    character={character}\r\n                    profile_path={profile_path}\r\n                  />\r\n                );\r\n              })}\r\n            </ul>\r\n          </>\r\n        ) : (\r\n          <p>Not found</p>\r\n        )}\r\n      </CastWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cast;\r\n","import styled from \"styled-components\";\r\n\r\nconst ReviewsWrapper = styled.div`\r\n  .reviews-list {\r\n    list-style: none;\r\n  }\r\n  .reviews-list-item {\r\n    width: 600px;\r\n  }\r\n`;\r\n\r\nexport default ReviewsWrapper;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ReviewsListItem = ({ author, content }) => {\r\n  return (\r\n    <li className=\"reviews-list-item\">\r\n      <h4>Author: {author}</h4>\r\n      <p>{content}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nReviewsListItem.propTypes = {\r\n  author: PropTypes.string.isRequired,\r\n  content: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ReviewsListItem;\r\n","import React, { Component } from \"react\";\r\nimport { fetchReviews } from \"../../api/fetchFilms\";\r\n\r\nimport ReviewsWrapper from \"./ReviewsStyled\";\r\n\r\nimport ReviewsListItem from \"./ReviewsListItem/ReviewsListItem\";\r\n\r\nclass Reviews extends Component {\r\n  state = {\r\n    reviews: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const id = this.props.match.params.movieId;\r\n    const reviews = await fetchReviews(id);\r\n    this.setState({ reviews: reviews });\r\n  }\r\n\r\n  render() {\r\n    const { reviews } = this.state;\r\n    return (\r\n      <ReviewsWrapper>\r\n        {reviews.length > 0 ? (\r\n          <>\r\n            <h3>Reviews:</h3>\r\n            <ul className=\"reviews-list\">\r\n              {reviews.map(({ id, author, content }) => {\r\n                return (\r\n                  <ReviewsListItem key={id} author={author} content={content} />\r\n                );\r\n              })}\r\n            </ul>\r\n          </>\r\n        ) : (\r\n          <p>Not found</p>\r\n        )}\r\n      </ReviewsWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Reviews;\r\n","import React, { Component } from \"react\";\r\nimport { Route } from \"react-router\";\r\n\r\nimport { fetchMoviesDetails } from \"../api/fetchFilms\";\r\nimport routes from \"../routes\";\r\n\r\nimport MovieCard from \"../components/MovieCard/MovieCard\";\r\nimport MovieNavigation from \"../components/MovieNavigation/MovieNavigation\";\r\nimport Cast from \"../components/Cast/Cast\";\r\nimport Reviews from \"../components/Reviews/Reviews\";\r\n\r\nclass MovieDetailsPage extends Component {\r\n  state = {\r\n    movie: {},\r\n    prevLocationState: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    const { location } = this.props;\r\n    const movie = await fetchMoviesDetails(movieId);\r\n    this.setState({ movie: movie, prevLocationState: location.state });\r\n  }\r\n\r\n  goBack = () => {\r\n    const { history } = this.props;\r\n    const { prevLocationState } = this.state;\r\n    if (prevLocationState?.from) {\r\n      history.push(prevLocationState.from);\r\n      return;\r\n    }\r\n    history.push(routes.movies);\r\n  };\r\n\r\n  render() {\r\n    const { movie } = this.state;\r\n    const { match } = this.props;\r\n    const { poster_path, title, release_date, vote_average, overview, genres } =\r\n      movie;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <button className=\"goback-btn\" type=\"button\" onClick={this.goBack}>\r\n          Go back\r\n        </button>\r\n        {Object.keys(movie).length > 0 ? (\r\n          <>\r\n            <MovieCard\r\n              poster_path={poster_path}\r\n              title={title}\r\n              release_date={release_date}\r\n              vote_average={vote_average}\r\n              overview={overview}\r\n              genres={genres}\r\n            />\r\n            <MovieNavigation />\r\n\r\n            <Route path={`${match.path}/cast`} component={Cast}></Route>\r\n            <Route path={`${match.path}/reviews`} component={Reviews}></Route>\r\n          </>\r\n        ) : (\r\n          <p>Not found</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetailsPage;\r\n"],"sourceRoot":""}